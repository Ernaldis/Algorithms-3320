(a) The QuickSort algorith's best case scenario is one in which every pivot is the median of the remaining elements. Such a sequence can be obtained by the following recurrence relation:
  1 is a member of the set
  sequence x being a member of the set implies a sequence of the following properties to also be a member of the set:
    prepend x with a value equal to 1+(the highest value in x)
    append x with x+(1+(the highest value in x)). That is, append x with a sequence of the numbers of x, which are each individually summed with 1+(the highest value in x).
  {(1), (2,1,3), (4,2,1,3,6,5,7), (8,4,2,1,3,6,5,7,12,10,9,11,14,13,15),...}
  The time complexity is O(nlog(n)), and the space complexity is O(n)
  
(b) The QuickSort algorithm's worst case scenario is one in which the pixot is always the largest or smallest element in the sub array. An array in ascending order satisfies this property.
This has a space complexity is O(n), because one call of the function will be put on the stack for every n.
The time complexity is also O(n), because increacing the n increaces the run time linearly. 
